services:
  web:
    build:
      context: .
      dockerfile: ./helolBackend/Dockerfile
    hostname: "helol-backend"
    restart: on-failure
    env_file:
      - .env.backend
    command: >
      bash -c "
      python3 helolBackend/manage.py makemigrations --noinput &&
      python3 helolBackend/manage.py migrate --noinput &&
      sh helolBackend/loaddata.sh &&
      python3 helolBackend/manage.py upsertNews &&
      python3 helolBackend/manage.py runserver 0.0.0.0:8080
      "
    ports:
      - "8000:8080"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16-alpine
    hostname: "heloldb"
    restart: on-failure
    env_file:
      - .env.backend
    ports:
      - "3307:${DB_PORT:-5432}"
    expose:
      - "${DB_PORT:-5432}"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    hostname: "helol-redis"
    restart: on-failure
    ports:
      - "6379:6379"

  agent:
    build:
      context: ./ComplaintSolutionFinder
      dockerfile: Dockerfile
    hostname: "helol-agent"
    restart: on-failure
    env_file:
      - ComplaintSolutionFinder/.env.agent
    command: >
      bash -c "
      uvicorn app:app --reload --host 0.0.0.0 --port 3030
      "
    ports:
      - "3000:3030"
    volumes:
      - ./helolBackend/media:/app/helolBackend/media
